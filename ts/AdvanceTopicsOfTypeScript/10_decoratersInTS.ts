/*
üí• TypeScript Decorators are a new and special way of declaring the classes, methods, parameters, and properties. The decorators are defined using the @expression syntax, where the expression will be a function that is to be invoked at the runtime with the information of the decorated declaration.

Decorators are just functions in a particular form which can apply to:

1Ô∏è‚É£ Class
2Ô∏è‚É£ Class Property
3Ô∏è‚É£ Class Method
4Ô∏è‚É£ Class Accessor
5Ô∏è‚É£ Class Method Parameter

There are five types of decorators we can use:

1Ô∏è‚É£ Class Decorators
2Ô∏è‚É£ Property Decorators
3Ô∏è‚É£ Method Decorators
4Ô∏è‚É£ Accessor Decorators
5Ô∏è‚É£ Parameter Decorators

*/

// 1Ô∏è‚É£ Class Decorator

function logger(target: any, ctx: ClassDecoratorContext) {
  console.log("Logger decorator");
  console.log(target);
  console.log(ctx);
}

@logger
class NewPerson {
  name: string = "Harsh";

  greet(): void {
    console.log(`Hi I am ${this.name}`);
  }
}
